name: harmony-api
on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./harmony-api
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: tsc
  
  test-and-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./harmony-api
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm ci
      - name: Run DB for testing, tests and linter
        env:
          PORT: 8081
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_PORT: 5432
          POSTGRES_DB: postgres_db
          POSTGRES_DB_NAME: postgres_db
          POSTGRES_DB_HOST: localhost
          POSTGRES_URL: "postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@${{ env.POSTGRES_DB_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB_NAME }}"
        run: |

          export POSTGRES_USER=username
          export POSTGRES_PASSWORD=password
          export POSTGRES_PORT=5432
          export POSTGRES_DB_NAME=postgres_db
          export POSTGRES_DB=postgres_db
          export POSTGRES_DB_HOST=localhost
          export POSTGRES_URL=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_DB_HOST:$POSTGRES_PORT/$POSTGRES_DB_NAME

          cd ../harmony-db

          cat docker-compose.yml

          docker-compose up -d
          
          cd ../harmony-api

          echo $POSTGRES_URL

          npx prisma migrate dev

          npm run test
